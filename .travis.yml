#=========================== begin_copyright_notice ============================
#
# Copyright (c) 2019-2021 Intel Corporation
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom
# the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.
#
#============================ end_copyright_notice =============================

language: cpp

#llvm 8
v8: &v8
  - llvm-8-tools
  - llvm-8-dev
  - libclang-8-dev
  - clang-8
  - clang-tools-8

#SPIRV for llvm8
v8install: &v8install
  - export TARBALL1=SPIRV-LLVM-Translator-v8.0.1-2-linux-${BUILD_TYPE}.zip
  - wget https://github.com/KhronosGroup/SPIRV-LLVM-Translator/releases/download/v8.0.1-2/${TARBALL1} -O /tmp/${TARBALL1}
  - unzip /tmp/${TARBALL1} -d spirv-llvm-translator

#llvm 9
v9: &v9
  - llvm-9-tools
  - llvm-9-dev
  - libclang-9-dev
  - clang-9
  - clang-tools-9

#SPIRV for llvm9
v9install: &v9install
  - export TARBALL2=SPIRV-LLVM-Translator-v9.0.0-1-linux-${BUILD_TYPE}.zip
  - wget https://github.com/KhronosGroup/SPIRV-LLVM-Translator/releases/download/v9.0.0-1/${TARBALL2} -O /tmp/${TARBALL2}
  - unzip /tmp/${TARBALL2} -d spirv-llvm-translator


matrix:
  include:
    - os: linux
      dist: xenial # Ubuntu 16.04 w/ llvm8
      env: LLVM_VER=8 BUILD_TYPE=Release COMPILER=gcc
      before_install:
          - git clone -b ocl-open-80 https://github.com/intel/opencl-clang opencl-clang
      addons:
        apt:
          sources:
            - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-8 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages: *v8
      install: *v8install
    - os: linux
      dist: bionic # Ubuntu 18.04 w/ llvm8
      env: LLVM_VER=8 BUILD_TYPE=Release COMPILER=gcc
      before_install:
          - git clone -b ocl-open-80 https://github.com/intel/opencl-clang opencl-clang
      addons:
        apt:
          sources:
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-8 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages: *v8
      install: *v8install
    - os: linux
      dist: xenial # Ubuntu 16.04 w/ llvm9
      env: LLVM_VER=9 BUILD_TYPE=Release COMPILER=gcc
      before_install:
          - git clone -b ocl-open-90 https://github.com/intel/opencl-clang opencl-clang
      addons:
        apt:
          sources:
            - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages: *v9
      install: *v9install
    - os: linux
      dist: bionic # Ubuntu 18.04 w/ llvm9
      env: LLVM_VER=9 BUILD_TYPE=Release COMPILER=gcc
      before_install:
          - git clone -b ocl-open-90 https://github.com/intel/opencl-clang opencl-clang
      addons:
        apt:
          sources:
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages: *v9
      install: *v9install
    - os: linux
      dist: xenial # Ubuntu 16.04 w/ llvm8
      env: LLVM_VER=8 BUILD_TYPE=Release COMPILER=clang
      before_install:
          - git clone -b ocl-open-80 https://github.com/intel/opencl-clang opencl-clang
      addons:
        apt:
          sources:
            - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-8 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages: *v8
      install: *v8install
    - os: linux
      dist: bionic # Ubuntu 18.04 w/ llvm8
      env: LLVM_VER=8 BUILD_TYPE=Release COMPILER=clang
      before_install:
          - git clone -b ocl-open-80 https://github.com/intel/opencl-clang opencl-clang
      addons:
        apt:
          sources:
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-8 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages: *v8
      install: *v8install
    - os: linux
      dist: xenial # Ubuntu 16.04 w/ llvm9
      env: LLVM_VER=9 BUILD_TYPE=Release COMPILER=clang
      before_install:
          - git clone -b ocl-open-90 https://github.com/intel/opencl-clang opencl-clang
      addons:
        apt:
          sources:
            - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages: *v9
      install: *v9install
    - os: linux
      dist: bionic # Ubuntu 18.04 w/ llvm9
      env: LLVM_VER=9 BUILD_TYPE=Release COMPILER=clang
      before_install:
          - git clone -b ocl-open-90 https://github.com/intel/opencl-clang opencl-clang
      addons:
        apt:
          sources:
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages: *v9
      install: *v9install

git:
  depth: 1

branches:
  only:
    - master

script:
  - if [ "${LLVM_VER}" == "9" ]; then sudo touch /usr/lib/llvm-9/bin/lit-cpuid; fi #Cmake fix
  - mkdir opencl-clang/build && cd opencl-clang/build
  - cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DLLVM_NO_DEAD_STRIP=ON -DLLVMSPIRV_INCLUDED_IN_LLVM=OFF -DSPIRV_TRANSLATOR_DIR=../spirv-llvm-translator ..
  - sudo make install
  - cd ../..
  - mkdir build && cd build
  - cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_FIND_DEBUG_MODE=ON -DIGC_PREFERRED_LLVM_VERSION=${LLVM_VER} -DCCLANG_FROM_SYSTEM=TRUE ../IGC
  - make -j`nproc`
