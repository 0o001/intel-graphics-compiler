From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: nrudenko <nikita.rudenko@intel.com>
Date: Thu, 10 Sep 2020 16:09:19 +0300
Subject: [PATCH 4/6] Simplify VCExport opts

---
 lib/SPIRV/VCExport.cpp | 19 +------------------
 1 file changed, 1 insertion(+), 18 deletions(-)

diff --git a/lib/SPIRV/VCExport.cpp b/lib/SPIRV/VCExport.cpp
index 00000000..00000000 100755
--- a/lib/SPIRV/VCExport.cpp
+++ b/lib/SPIRV/VCExport.cpp
@@ -23,24 +23,7 @@
 #include "llvm/Support/MemoryBuffer.h"
 
 SPIRV::TranslatorOpts GetTranslatorOpts() {
-  std::map<std::string, ExtensionID> ExtensionNamesMap;
-#define _STRINGIFY(X) #X
-#define STRINGIFY(X) _STRINGIFY(X)
-#define EXT(X) ExtensionNamesMap[STRINGIFY(X)] = ExtensionID::X;
-#include "LLVMSPIRVExtensions.inc"
-#undef EXT
-#undef STRINGIFY
-#undef _STRINGIFY
-
-  SPIRV::TranslatorOpts::ExtensionsStatusMap ExtensionsStatus;
-  // Set the initial state:
-  //  - during SPIR-V consumption, assume that any known extension is allowed.
-  //  - during SPIR-V generation, assume that any known extension is disallowed.
-  //  - during conversion to/from SPIR-V text representation, assume that any
-  //    known extension is allowed.
-  for (const auto &It : ExtensionNamesMap)
-    ExtensionsStatus[It.second] = true;
-  SPIRV::TranslatorOpts Opts(VersionNumber::MaximumVersion, ExtensionsStatus);
+  SPIRV::TranslatorOpts Opts;
   Opts.setFPContractMode(SPIRV::FPContractMode::On);
   Opts.setDesiredBIsRepresentation(SPIRV::BIsRepresentation::SPIRVFriendlyIR);
   return Opts;
-- 
2.31.0

